services:
  application:
    container_name: ${_Values_root_name}-application
    image:  ${_Values_image_repository}${_Values_image_native}:${_Values_image_tag}
    restart: 'no'
    ports:
      - "${_Values_service_port}:${_Values_service_port}"

    volumes:
      - tmp:/tmp
      - applogs:/usr/share/logs
    networks:
      - ${_Values_root_name}-net
    environment:
      #application
      TZ: Europe/Berlin
      GITHUB_TOKEN: ${GITHUB_TOKEN}
      ARGOCD_AUTH_TOKEN: ${ARGOCD_AUTH_TOKEN}

  nginx:
    container_name: ${_Values_root_name}-nginx
    image: nginx:1.28-alpine3.21
    restart: 'no'
    ports:
      - "8080:80"
    networks:
      - ${_Values_root_name}-net
    volumes:
      - ./nginx/nginx${_Values_nginx_oidc}.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl/:/etc/ssl/
    depends_on:
      application:
        condition: service_started

volumes:
    tmp:
    applogs:

networks:
  backstage-net:
    driver: bridge